name: random-derive
version: 0.1.0.0
cabal-version: >=1.10
build-type: Simple
license: BSD3
license-file: LICENSE
copyright: Copyright (c) 2015 Frerich Raabe <frerich.raabe@gmail.com>
maintainer: frerich.raabe@gmail.com
homepage: https://github.com/frerich/random-derive
bug-reports: https://github.com/frerich/random-derive/issues
synopsis: A Template Haskell helper for deriving Random instances
description:
  This module exposes a 'deriveRandom' function which automatically creates
  'Random' instances for data types instantiating both 'Enum' as well as
  'Bounded'.
  .
  .This is useful for getting random values (or sequences of random values) of
  .custom types, e.g.:
  .
  > {-# LANGUAGE TemplateHaskell #-}
  >
  > import System.Random (mkStdGen, randoms)
  > import System.Random.TH
  >
  > data Color = Red | Green | Blue deriving (Enum, Bounded)
  >
  > $(deriveRandom ''Color)
  >
  > -- Yields an infinite sequence of random colors given some initial seed.
  > randomColors :: Int -> [Color]
  > randomColors seed = randoms (mkStdGen seed)
category: Development
author: Frerich Raabe

source-repository head
    type: git
    location: http://github.com/frerich/random-derive

library
    exposed-modules:
        System.Random.TH
    build-depends:
        base >=4.7 && <4.12,
        template-haskell >=2.9 && <2.14,
        random
    default-language: Haskell2010
    ghc-options: -Wall
    hs-source-dirs: src

